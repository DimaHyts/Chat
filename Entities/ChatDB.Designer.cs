//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ChatModel", "FK_Message_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Entities.User), "Message", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Entities.Message), true)]
[assembly: EdmRelationshipAttribute("ChatModel", "FK_Message_User1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Entities.User), "Message", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Entities.Message), true)]

#endregion

namespace Entities
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ChatEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ChatEntities object using the connection string found in the 'ChatEntities' section of the application configuration file.
        /// </summary>
        public ChatEntities() : base("name=ChatEntities", "ChatEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ChatEntities object.
        /// </summary>
        public ChatEntities(string connectionString) : base(connectionString, "ChatEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ChatEntities object.
        /// </summary>
        public ChatEntities(EntityConnection connection) : base(connection, "ChatEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Message> Messages
        {
            get
            {
                if ((_Messages == null))
                {
                    _Messages = base.CreateObjectSet<Message>("Messages");
                }
                return _Messages;
            }
        }
        private ObjectSet<Message> _Messages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagram> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagram>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagram> _sysdiagrams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Messages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMessages(Message message)
        {
            base.AddObject("Messages", message);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagram sysdiagram)
        {
            base.AddObject("sysdiagrams", sysdiagram);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="diagramname">No Metadata Documentation available.</param>
        /// <param name="owner_id">No Metadata Documentation available.</param>
        /// <param name="version">No Metadata Documentation available.</param>
        /// <param name="definition">No Metadata Documentation available.</param>
        public int sp_alterdiagram(global::System.String diagramname, Nullable<global::System.Int32> owner_id, Nullable<global::System.Int32> version, global::System.Byte[] definition)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            ObjectParameter versionParameter;
            if (version.HasValue)
            {
                versionParameter = new ObjectParameter("version", version);
            }
            else
            {
                versionParameter = new ObjectParameter("version", typeof(global::System.Int32));
            }
    
            ObjectParameter definitionParameter;
            if (definition != null)
            {
                definitionParameter = new ObjectParameter("definition", definition);
            }
            else
            {
                definitionParameter = new ObjectParameter("definition", typeof(global::System.Byte[]));
            }
    
            return base.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="diagramname">No Metadata Documentation available.</param>
        /// <param name="owner_id">No Metadata Documentation available.</param>
        /// <param name="version">No Metadata Documentation available.</param>
        /// <param name="definition">No Metadata Documentation available.</param>
        public int sp_creatediagram(global::System.String diagramname, Nullable<global::System.Int32> owner_id, Nullable<global::System.Int32> version, global::System.Byte[] definition)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            ObjectParameter versionParameter;
            if (version.HasValue)
            {
                versionParameter = new ObjectParameter("version", version);
            }
            else
            {
                versionParameter = new ObjectParameter("version", typeof(global::System.Int32));
            }
    
            ObjectParameter definitionParameter;
            if (definition != null)
            {
                definitionParameter = new ObjectParameter("definition", definition);
            }
            else
            {
                definitionParameter = new ObjectParameter("definition", typeof(global::System.Byte[]));
            }
    
            return base.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="diagramname">No Metadata Documentation available.</param>
        /// <param name="owner_id">No Metadata Documentation available.</param>
        public int sp_dropdiagram(global::System.String diagramname, Nullable<global::System.Int32> owner_id)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="diagramname">No Metadata Documentation available.</param>
        /// <param name="owner_id">No Metadata Documentation available.</param>
        public ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(global::System.String diagramname, Nullable<global::System.Int32> owner_id)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="diagramname">No Metadata Documentation available.</param>
        /// <param name="owner_id">No Metadata Documentation available.</param>
        public ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(global::System.String diagramname, Nullable<global::System.Int32> owner_id)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="diagramname">No Metadata Documentation available.</param>
        /// <param name="owner_id">No Metadata Documentation available.</param>
        /// <param name="new_diagramname">No Metadata Documentation available.</param>
        public int sp_renamediagram(global::System.String diagramname, Nullable<global::System.Int32> owner_id, global::System.String new_diagramname)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            ObjectParameter new_diagramnameParameter;
            if (new_diagramname != null)
            {
                new_diagramnameParameter = new ObjectParameter("new_diagramname", new_diagramname);
            }
            else
            {
                new_diagramnameParameter = new ObjectParameter("new_diagramname", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public int sp_upgraddiagrams()
        {
            return base.ExecuteFunction("sp_upgraddiagrams");
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChatModel", Name="Message")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Message : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Message object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="userFrom">Initial value of the UserFrom property.</param>
        /// <param name="userTo">Initial value of the UserTo property.</param>
        public static Message CreateMessage(global::System.Int32 id, global::System.String text, global::System.DateTime date, global::System.Int32 userFrom, global::System.Int32 userTo)
        {
            Message message = new Message();
            message.Id = id;
            message.Text = text;
            message.Date = date;
            message.UserFrom = userFrom;
            message.UserTo = userTo;
            return message;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false, "Text");
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, "Date");
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserFrom
        {
            get
            {
                return _UserFrom;
            }
            set
            {
                OnUserFromChanging(value);
                ReportPropertyChanging("UserFrom");
                _UserFrom = StructuralObject.SetValidValue(value, "UserFrom");
                ReportPropertyChanged("UserFrom");
                OnUserFromChanged();
            }
        }
        private global::System.Int32 _UserFrom;
        partial void OnUserFromChanging(global::System.Int32 value);
        partial void OnUserFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserTo
        {
            get
            {
                return _UserTo;
            }
            set
            {
                OnUserToChanging(value);
                ReportPropertyChanging("UserTo");
                _UserTo = StructuralObject.SetValidValue(value, "UserTo");
                ReportPropertyChanged("UserTo");
                OnUserToChanged();
            }
        }
        private global::System.Int32 _UserTo;
        partial void OnUserToChanging(global::System.Int32 value);
        partial void OnUserToChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChatModel", "FK_Message_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChatModel.FK_Message_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChatModel.FK_Message_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChatModel.FK_Message_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ChatModel.FK_Message_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChatModel", "FK_Message_User1", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChatModel.FK_Message_User1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChatModel.FK_Message_User1", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ChatModel.FK_Message_User1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ChatModel.FK_Message_User1", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChatModel", Name="sysdiagram")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagram : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagram object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagram Createsysdiagram(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagram sysdiagram = new sysdiagram();
            sysdiagram.name = name;
            sysdiagram.principal_id = principal_id;
            sysdiagram.diagram_id = diagram_id;
            return sysdiagram;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value, "principal_id");
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value, "diagram_id");
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value, "version");
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true, "definition");
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChatModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="login">Initial value of the Login property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        public static User CreateUser(global::System.Int32 id, global::System.String name, global::System.String login, global::System.String password)
        {
            User user = new User();
            user.Id = id;
            user.Name = name;
            user.Login = login;
            user.Password = password;
            return user;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Login
        {
            get
            {
                return _Login;
            }
            set
            {
                OnLoginChanging(value);
                ReportPropertyChanging("Login");
                _Login = StructuralObject.SetValidValue(value, false, "Login");
                ReportPropertyChanged("Login");
                OnLoginChanged();
            }
        }
        private global::System.String _Login;
        partial void OnLoginChanging(global::System.String value);
        partial void OnLoginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false, "Password");
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChatModel", "FK_Message_User", "Message")]
        public EntityCollection<Message> Messages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Message>("ChatModel.FK_Message_User", "Message");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Message>("ChatModel.FK_Message_User", "Message", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChatModel", "FK_Message_User1", "Message")]
        public EntityCollection<Message> Messages1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Message>("ChatModel.FK_Message_User1", "Message");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Message>("ChatModel.FK_Message_User1", "Message", value);
                }
            }
        }

        #endregion

    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ChatModel", Name="sp_helpdiagramdefinition_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class sp_helpdiagramdefinition_Result : ComplexObject
    {
        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value, "version");
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true, "definition");
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ChatModel", Name="sp_helpdiagrams_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class sp_helpdiagrams_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sp_helpdiagrams_Result object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="ownerID">Initial value of the OwnerID property.</param>
        public static sp_helpdiagrams_Result Createsp_helpdiagrams_Result(global::System.String name, global::System.Int32 id, global::System.Int32 ownerID)
        {
            sp_helpdiagrams_Result sp_helpdiagrams_Result = new sp_helpdiagrams_Result();
            sp_helpdiagrams_Result.Name = name;
            sp_helpdiagrams_Result.ID = id;
            sp_helpdiagrams_Result.OwnerID = ownerID;
            return sp_helpdiagrams_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Database
        {
            get
            {
                return _Database;
            }
            set
            {
                OnDatabaseChanging(value);
                ReportPropertyChanging("Database");
                _Database = StructuralObject.SetValidValue(value, true, "Database");
                ReportPropertyChanged("Database");
                OnDatabaseChanged();
            }
        }
        private global::System.String _Database;
        partial void OnDatabaseChanging(global::System.String value);
        partial void OnDatabaseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                OnIDChanging(value);
                ReportPropertyChanging("ID");
                _ID = StructuralObject.SetValidValue(value, "ID");
                ReportPropertyChanged("ID");
                OnIDChanged();
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Owner
        {
            get
            {
                return _Owner;
            }
            set
            {
                OnOwnerChanging(value);
                ReportPropertyChanging("Owner");
                _Owner = StructuralObject.SetValidValue(value, true, "Owner");
                ReportPropertyChanged("Owner");
                OnOwnerChanged();
            }
        }
        private global::System.String _Owner;
        partial void OnOwnerChanging(global::System.String value);
        partial void OnOwnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OwnerID
        {
            get
            {
                return _OwnerID;
            }
            set
            {
                OnOwnerIDChanging(value);
                ReportPropertyChanging("OwnerID");
                _OwnerID = StructuralObject.SetValidValue(value, "OwnerID");
                ReportPropertyChanged("OwnerID");
                OnOwnerIDChanged();
            }
        }
        private global::System.Int32 _OwnerID;
        partial void OnOwnerIDChanging(global::System.Int32 value);
        partial void OnOwnerIDChanged();

        #endregion

    }

    #endregion

}
